/*
 * MIT License
 * Copyright (c) 2017 Luigi Capogrosso
 */

// =============================================================================
#ifndef LIST_H
#define LIST_H

#include <stdbool.h>
// =============================================================================
struct list_t {
    int value;
    struct list_t *next;
};
// =============================================================================
struct list_t *construct(int num, struct list_t *node1);
// =============================================================================
struct list_t *insert_on_head(struct list_t *list, int num);
// =============================================================================
struct list_t *insert_on_tail(struct list_t *list, int num);
// =============================================================================
struct list_t *array_to_list(struct list_t *list, int array[], int length);
// =============================================================================
struct list_t *delete_xvalue(struct list_t *list, int num);
// =============================================================================
struct list_t *merge_list(struct list_t *list1, struct list_t *list2);
// =============================================================================
struct list_t *first_equal(struct list_t *list);
// =============================================================================
struct list_t *minimun_equal(struct list_t *list);
// =============================================================================
struct list_t *read_list();
// =============================================================================
struct list_t *delete_nvalue(struct list_t *list);
// =============================================================================
struct list_t *delete_pvalue(struct list_t *list);
// =============================================================================
struct list_t *increasing(struct list_t *list, int num);
// =============================================================================
struct list_t *list_without_pn(struct list_t *list);
// =============================================================================
struct list_t *rotate_list(struct list_t *list);
// =============================================================================
struct list_t *calculate_sublist(struct list_t *list, int num);
// =============================================================================
struct list_t *only_double(struct list_t *list);
// =============================================================================
struct list_t *add_list(struct list_t *l1, struct list_t *l2);
// =============================================================================
struct list_t *sub_list(struct list_t *l1, struct list_t *l2);
// =============================================================================
struct list_t *mul_list(struct list_t *l1, struct list_t *l2);
// =============================================================================
struct list_t *div_list(struct list_t *l1, struct list_t *l2);
// =============================================================================
int length_list(struct list_t *list);
// =============================================================================
int sum_list(struct list_t *list);
// =============================================================================
int max_list(struct list_t *list);
// =============================================================================
int min_list(struct list_t *list);
// =============================================================================
int get_first(struct list_t *list);
// =============================================================================
int get_last(struct list_t *list);
// =============================================================================
int median(struct list_t *list, int l);
// =============================================================================
float media(struct list_t *list);
// =============================================================================
bool equals_list(struct list_t *list1, struct list_t *list2);
// =============================================================================
bool ordered_list(struct list_t *list);
// =============================================================================
bool not_first(int num);
// =============================================================================
void increment_list(struct list_t *list);
// =============================================================================
void list_to_array(struct list_t *list, int array[], int length);
// =============================================================================
void print_list(struct list_t *list);
// =============================================================================
void free_list(struct list_t *list);
// =============================================================================
void selection_sort(struct list_t *list);
// =============================================================================
void exchange(int *n1, int *n2);
// =============================================================================
void complete_list(struct list_t *list);
// =============================================================================
void print_even_odd(struct list_t *list);
// =============================================================================
void delete_last_element(struct list_t *list);
// =============================================================================

#endif
